<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0207.2140                               -->
<workbook source-build='10.1.5 (10100.17.0207.2140)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='rest_df' inline='true' name='federated.1uhgock1ck9r9x1awcapl0dgc33k' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='rest_df' name='textscan.1ou893p02gme6t0zsnvud11wvbxi'>
            <connection class='textscan' directory='/Users/annaheller/DSI/dsi_workspace/projects/project-captsone/data' filename='la_rest_group_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ou893p02gme6t0zsnvud11wvbxi' name='rest_df.csv' table='[la_rest_group_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='facility' ordinal='1' />
            <column datatype='string' name='address' ordinal='2' />
            <column datatype='string' name='city' ordinal='3' />
            <column datatype='integer' name='zip_cd' ordinal='4' />
            <column datatype='integer' name='num_at_address' ordinal='5' />
            <column datatype='integer' name='max_seats' ordinal='6' />
            <column datatype='string' name='phone' ordinal='7' />
            <column datatype='string' name='risk_level' ordinal='8' />
            <column datatype='date' name='last_inspect_date' ordinal='9' />
            <column datatype='real' name='inspect_score' ordinal='10' />
            <column datatype='string' name='cat' ordinal='11' />
            <column datatype='integer' name='closed_est' ordinal='12' />
            <column datatype='integer' name='year' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[facility]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>facility</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_cd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_cd]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>zip_cd</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_at_address</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_at_address]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>num_at_address</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_seats</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_seats]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>max_seats</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>risk_level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[risk_level]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>risk_level</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_inspect_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[last_inspect_date]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>last_inspect_date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inspect_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inspect_score]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>inspect_score</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>cat</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>closed_est</remote-name>
            <remote-type>20</remote-type>
            <local-name>[closed_est]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>closed_est</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[rest_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Facility' datatype='string' name='[facility]' role='dimension' type='nominal' />
      <column caption='Inspect Score' datatype='real' name='[inspect_score]' role='measure' type='quantitative' />
      <column caption='Last Inspect Date' datatype='date' name='[last_inspect_date]' role='dimension' type='ordinal' />
      <column caption='Risk Level' datatype='string' name='[risk_level]' role='dimension' type='nominal' />
      <column caption='Seat Range' datatype='string' name='[seat_range]' role='dimension' type='nominal' />
      <column caption='Zip Cd' datatype='integer' default-format='*00000' name='[zip_cd]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.517997' measure-ordering='alphabetic' measure-percentage='0.482003' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='LA Avg Scores - Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tahoma'>Average Restaurant Scores for LA County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='rest_df' name='federated.1uhgock1ck9r9x1awcapl0dgc33k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1uhgock1ck9r9x1awcapl0dgc33k'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[inspect_score]' derivation='Avg' name='[avg:inspect_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Inspect Score' datatype='real' name='[inspect_score]' role='measure' type='quantitative' />
            <column-instance column='[zip_cd]' derivation='None' name='[none:zip_cd:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Zip Cd' datatype='integer' default-format='*00000' name='[zip_cd]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>5</min>
            <max>407</max>
          </filter>
          <slices>
            <column>[federated.1uhgock1ck9r9x1awcapl0dgc33k].[cnt:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[Longitude (generated)]' field-type='quantitative' max='-13132276.965139635' min='-13211312.852386506' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[Latitude (generated)]' field-type='quantitative' max='4054925.2743136035' min='4009368.8054556386' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[avg:inspect_score:qk]' num-steps='5' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[avg:inspect_score:qk]' />
              <lod column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:zip_cd:ok]' />
              <color column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[avg:inspect_score:qk]' />
              <lod column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[sum:Number of Records:qk]' />
              <geometry column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='231' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1uhgock1ck9r9x1awcapl0dgc33k].[Latitude (generated)]</rows>
        <cols>[federated.1uhgock1ck9r9x1awcapl0dgc33k].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='rest_df' name='federated.1uhgock1ck9r9x1awcapl0dgc33k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1uhgock1ck9r9x1awcapl0dgc33k'>
            <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
            <column-instance column='[inspect_score]' derivation='Avg' name='[avg:inspect_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[inspect_score]' derivation='Count' name='[cnt:inspect_score:qk]' pivot='key' type='quantitative' />
            <column caption='Facility' datatype='string' name='[facility]' role='dimension' type='nominal' />
            <column caption='Inspect Score' datatype='real' name='[inspect_score]' role='measure' type='quantitative' />
            <column-instance column='[address]' derivation='None' name='[none:address:nk]' pivot='key' type='nominal' />
            <column-instance column='[facility]' derivation='None' name='[none:facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_range]' derivation='None' name='[none:seat_range:nk]' pivot='key' type='nominal' />
            <column caption='Seat Range' datatype='string' name='[seat_range]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:address:nk]'>
            <groupfilter function='member' level='[none:address:nk]' member='&quot;18347 COLIMA RD&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:address:nk]' direction='DESC' using='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[cnt:inspect_score:qk]' />
          <slices>
            <column>[federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:address:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:facility:nk]' value='304' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[avg:inspect_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:address:nk] / ([federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:seat_range:nk] / [federated.1uhgock1ck9r9x1awcapl0dgc33k].[none:facility:nk]))</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='LA Avg Scores - Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1uhgock1ck9r9x1awcapl0dgc33k].[avg:inspect_score:qk]' type='color' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1uhgock1ck9r9x1awcapl0dgc33k].[avg:inspect_score:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='LA Avg Scores - Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
